// <auto-generated> - Template:WebApiDataServiceInterface, Version:2.0, Id:f3203ad7-73ab-46e0-9ece-43b75c855164
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using CodeGenHero.DataService;
using xDTO = CGHClientServer1.DTO.CSC;

namespace CGHClientServer1.API.Client.Interface
{
	public partial interface IWebApiDataServiceCSC : IWebApiDataServiceBase
	{
		#region GetAllPages

		Task<IList<xDTO.City>> GetAllPagesCitiesAsync(string sort = null);

		Task<IList<xDTO.Country>> GetAllPagesCountriesAsync(string sort = null);

		Task<IList<xDTO.State>> GetAllPagesStatesAsync(string sort = null);


		#endregion GetAllPages


		#region GetPageData

		Task<IHttpCallResultCGHT<IPageDataT<IList<xDTO.City>>>> GetCitiesAsync(IPageDataRequest pageDataRequest);

		Task<IHttpCallResultCGHT<IPageDataT<IList<xDTO.City>>>> GetCitiesAsync(string sort = null, int page = 1, int pageSize = 100);

		Task<IHttpCallResultCGHT<IPageDataT<IList<xDTO.Country>>>> GetCountriesAsync(IPageDataRequest pageDataRequest);

		Task<IHttpCallResultCGHT<IPageDataT<IList<xDTO.Country>>>> GetCountriesAsync(string sort = null, int page = 1, int pageSize = 100);

		Task<IHttpCallResultCGHT<IPageDataT<IList<xDTO.State>>>> GetStatesAsync(IPageDataRequest pageDataRequest);

		Task<IHttpCallResultCGHT<IPageDataT<IList<xDTO.State>>>> GetStatesAsync(string sort = null, int page = 1, int pageSize = 100);


		#endregion GetPageData


		#region Get By PK

		Task<IHttpCallResultCGHT<xDTO.City>> GetCityAsync(Guid cityId, int numChildLevels);

		Task<IHttpCallResultCGHT<xDTO.Country>> GetCountryAsync(Guid countryId, int numChildLevels);

		Task<IHttpCallResultCGHT<xDTO.State>> GetStateAsync(Guid stateId, int numChildLevels);


		#endregion Get By PK


		#region Create

		Task<IHttpCallResultCGHT<xDTO.City>> CreateCityAsync(xDTO.City item);

		Task<IHttpCallResultCGHT<xDTO.Country>> CreateCountryAsync(xDTO.Country item);

		Task<IHttpCallResultCGHT<xDTO.State>> CreateStateAsync(xDTO.State item);


		#endregion Create


		#region Update

		Task<IHttpCallResultCGHT<xDTO.City>> UpdateCityAsync(xDTO.City item);

		Task<IHttpCallResultCGHT<xDTO.Country>> UpdateCountryAsync(xDTO.Country item);

		Task<IHttpCallResultCGHT<xDTO.State>> UpdateStateAsync(xDTO.State item);


		#endregion Update


		#region Delete

		Task<IHttpCallResultCGHT<xDTO.City>> DeleteCityAsync(Guid cityId);

		Task<IHttpCallResultCGHT<xDTO.Country>> DeleteCountryAsync(Guid countryId);

		Task<IHttpCallResultCGHT<xDTO.State>> DeleteStateAsync(Guid stateId);


		#endregion Delete


	}
}
