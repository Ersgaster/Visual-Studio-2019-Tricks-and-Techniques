// <auto-generated> - Template:APIStatusController, Version:2.0, Id:670eef0c-24a5-40bf-9152-faaa31e3988a
using Microsoft.Extensions.Logging;
using System;
using System.Threading.Tasks;
using System.Web.Http;
using coreEnums = CodeGenHero.Core.Enums;
using CodeGenHero.WebApi;
using CGHClientServer1.Repository.Interface;

namespace CGHClientServer1.API.Controllers.CSC
{
	public partial class CSCAPIStatusController : CSCBaseApiController
	{
		public CSCAPIStatusController(ILogger<CSCAPIStatusController> log, ICSCRepository repository)
			: base(log, repository)
		{
		}

		[HttpGet]
		[VersionedRoute(template: "APIStatus", allowedVersion: 1, Name = "CSCAPIStatus")]
		#pragma warning disable CS1998 // Async method lacks 'await' operators and will run synchronously
		public async Task<IHttpActionResult> Get()
		#pragma warning restore CS1998 // Async method lacks 'await' operators and will run synchronously
		{
			try
			{
				var version = this.GetType().Assembly.GetName().Version;
				return Ok(version);
			}
			catch (Exception ex)
			{
				Log.LogError(eventId: (int)coreEnums.EventId.Exception_WebApi,
					exception: ex,
					message: "Unable to get status via Web API for RequestUri {{RequestUri}}",
					Request.RequestUri.ToString());

				if (System.Diagnostics.Debugger.IsAttached)
					System.Diagnostics.Debugger.Break();

				return InternalServerError();
			}
		}
	}
}
